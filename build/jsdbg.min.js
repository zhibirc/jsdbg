!function(a){"use strict";function b(a,b){try{throw new a(b)}catch(c){return c.stack}}var c,d,e,f=a.console,g=Object.prototype.hasOwnProperty,h="undefined"!=typeof f,i={activity:1,remote:0};if("undefined"==typeof a.___&&(Object.defineProperty(a,"___",{value:{}}),c=a.___),c.NAME="___",e={errors:{wrong_params_set:"Not enough arguments provided while use setState() for debug settings (expect 2)! For details please refer to the documentation ("+c.NAME+".HELP).",wrong_activity_flag:"Activity flags may be 1 or 0 only, any other values are wrong! For details please refer to the documentation ("+c.NAME+".HELP).",wrong_remote_settings:"Remote settings object must have the following structure: { on: 1/0, url: url }."},intro:{0:'◀ Introduction to JSDBG ▶\n\nNow your debug tool is available under the "'+c.NAME,1:'" name. Naturally, as the built-in console it has a lot of methods and some properties, full list of which and information about common usage are always available by typing\n\n',2:"> "+c.NAME+".HELP",3:"\n\nInformation about methods is identical to standard native console ones. But keep in mind that there are additional functionality and possibilities, so read documentation."},state:{header:"◀ JSDBG state report ▶\n\n",body:{0:"Debugger "+(i.activity?"ENABLED (1)":"DISABLED (0)")+".\n",1:"Logging "+(i.logging?"ENABLED (1)":"DISABLED (0)")+".\n",2:"Remote control "+(i.remote?"ENABLED (1)":"DISABLED (0)")+".\n"}},help:{header:"◀ JSDBG HELP ▶"}},h&&"function"==typeof f.log&&f.log(e.intro[0]+e.intro[1]+e.intro[2]+e.intro[3]),h){d=["log","warn","error","info","dir","time","timeEnd","assert","debug","count","group","groupEnd","groupCollapsed","trace"];for(var j in f)!function(a){f[a]&&~d.indexOf(a)&&Object.defineProperty(c,a,{value:function(){return 1!==i.activity?void 0:void f[a].apply(f,arguments)}})}(j)}c.setState=function(a,c){("undefined"==typeof a||"undefined"==typeof c)&&b(SyntaxError,e.errors.wrong_params_set),~[0,1].indexOf(a)||b(SyntaxError,e.errors.wrong_activity_flag),g.call(c,"on")&&g.call(c,"url")&&~[0,1].indexOf(c.on)&&"string"==typeof c.url||b(SyntaxError,e.errors.wrong_remote_settings),i.activity=+(1===a),i.remote=+(1===c.on)},c.VERSION="1.0",c.HELP=e.help,c.STATE=e.state.header+Object.keys(e.state.body).reduce(function(a,b){return a+=e.state.body[b]},""),Object.freeze(c)}(window);